ktor {
  deployment {
    port = 8081
    port = ${?PORT}
    watch = [ com.expensetracker ]
  }
  application {
    modules = [ com.expensetracker.ApplicationKt.module ]
  }
}

# Database configuration with environment variable support
db {
  jdbcurl = "jdbc:postgresql://db:5432/expensetracker"
  jdbcurl = ${?DB_JDBC_URL}
  user = "postgres"
  user = ${?DB_USER}
  password = "password"
  password = ${?DB_PASSWORD}
}

# JWT configuration with environment variable support
jwt {
  secret = "dev-secret"
  secret = ${?JWT_SECRET}
  issuer = "expensetracker"
  issuer = ${?JWT_ISSUER}
  audience = "expensetracker-users"
  audience = ${?JWT_AUDIENCE}
  realm = "expensetracker-app"
  realm = ${?JWT_REALM}
  expirationHours = 24
  expirationHours = ${?JWT_EXPIRATION_HOURS}
}

# Environment-specific overrides
# These can be overridden by environment variables or system properties
# Example: KTOR_db.jdbcUrl, KTOR_jwt.secret, etc.

# Authentication settings
auth {
  registrationCode = "FAMILY2024"
  registrationCode = ${?REGISTRATION_CODE}
}

# Logging configuration
logging {
  level = "INFO"
  level = ${?LOG_LEVEL}
}

# Database connection pool settings (HikariCP)
db {
  pool {
    maximumPoolSize = 10
    maximumPoolSize = ${?DB_MAX_POOL_SIZE}
    minimumIdle = 2
    minimumIdle = ${?DB_MIN_IDLE}
    connectionTimeout = 30000
    connectionTimeout = ${?DB_CONNECTION_TIMEOUT}
    idleTimeout = 300000
    idleTimeout = ${?DB_IDLE_TIMEOUT}
    maxLifetime = 900000
    maxLifetime = ${?DB_MAX_LIFETIME}
    leakDetectionThreshold = 60000
    leakDetectionThreshold = ${?DB_LEAK_DETECTION_THRESHOLD}
  }
} 